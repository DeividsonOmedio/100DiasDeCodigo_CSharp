@page "/login"
@inject IAuthService AuthService
@inject IJSRuntime JSRuntime
<PageTitle>Login</PageTitle>

@if (!cadastroPage)
{
<h1>Login</h1>

<div id="divLogin">
    <div>
        <label>Email</label>
        <InputText @bind-Value="@Email"/>
    </div>
    <div>
        <label>Senha</label>
        <InputText  @bind-Value="@Password"></InputText>
    </div>
    <div class="flex justify-content-between">
        <button class="btn btn-primary" @onclick="(()=> Logar())">Login</button>
           <button class="btn btn-second" @onclick="(()=> Register())">Cadastrar</button>
    </div>
</div>
<div>
        <button class="btn btn-second" @onclick="(()=> Register())"></button>
    </div>
}
else
{
    <Sign Login="Registered"></Sign>
}

@code {
    private int currentCount = 0;
    public string Email = "";
    public string Password = "";
    public string? token = "";
    public bool cadastroPage = false;
    public async void Logar()
    {
        token = await AuthService.GetToken(Email, Password);
        if (token != null) await JSRuntime.InvokeVoidAsync("location.reload");
    }
    public void Registered(UserModel user)
    {
        Email = user.Email;
        Password = user.Password;
        Logar();
    }
    public void Register()
    {
        cadastroPage = true;
    }
}
