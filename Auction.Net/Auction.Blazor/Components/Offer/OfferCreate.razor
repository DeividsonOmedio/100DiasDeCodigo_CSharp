@inject ICreateOfferService createOfferService
@inject NavigationManager navigation

<h2 class="text-center">Dar Lance</h2>

<div >
    <ul class="align-content-center border-1 list-unstyled mx-5">
        <li><span>Nome: </span> @Item.Brand</li>
        <li><span>Descrição: </span> @Item.Name</li>
        <li><span>Estado: </span> @Item.Condition</li>
        <li><span>Preço Base</span> @Item.BasePrice.ToString("C2")</li>
    </ul>
    <EditForm Model="@Offer" OnValidSubmit="CreateOffer" class="bg-opacity-50" style="font-size: 1rem;">
    <DataAnnotationsValidator />
    <ValidationSummary />
        <div class="modal-body mx-5">
        <label for="Offer.Price">Oferta</label>
         R$ <InputNumber  @bind-Value="Offer.Price" class="form-control w-25" />
        <ValidationMessage For="@(() =>Offer.Price)" />
    </div>
    <div class="modal-footer justify-content-lg-start mx-4">
        
            <button @onclick="(()=>CreateOffer())" class="btn btn-primary start-0">Dar Lance</button>
    </div>
    </EditForm>

</div>

@if(DisplayCreated)
{
    <table class="table w-50">
        <thead>
            <tr>
                <th>Criadom em</th>
                <th>Valor</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>@Created.CreatedOn</td>
                <td>@Created.Price.ToString("C2")</td>
            </tr>
        </tbody>
    </table>
}
    
@code {
    public RequestCreateOfferJson Offer { get; set; } = new();
    public OfferModel Created { get; set; } = new();
    [Parameter] public ItemModel Item { get; set; } = new();
    bool DisplayCreated = false;
    public async Task CreateOffer()
    {
        Created = await createOfferService.Execute(Item.Id, Offer);
        DisplayCreated = true;
        await Task.CompletedTask;
        navigation.NavigateTo("/dashboard");
    }

}
