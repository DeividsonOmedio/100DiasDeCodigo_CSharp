@page "/createauction"

<h2>Criar Leilão</h2>

<EditForm Model="@Auction" OnValidSubmit="CreateAuction" class="bg-opacity-50" style="font-size: 1rem;">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group row">
        <div class="col-sm-4">
            <label for="Auction.Name">Nome</label>
            <InputText @bind-Value="Auction.Name" class="form-control" />
            <ValidationMessage For="@(() => Auction.Name)" />
        </div>
    </div>
    <div class="form-group row">
        <div class="col-sm-4">
            <label for="Auction.Starts">Inicio</label>
            <InputDate 
                       Type="InputDateType.DateTimeLocal"
                       min="@DateTime.Today.ToString("yyyy-MM-dd")" 
                       @bind-Value="Auction.Starts" class="form-control" />
            <ValidationMessage For="@(() => Auction.Starts)" />
        </div>
    </div>
    <div class="form-group row">
        <div class="col-sm-4">
            <label for="Auction.Ends">Fim</label>
            <InputDate Type="InputDateType.DateTimeLocal"
                       min="@DateTime.Today.ToString("yyyy-MM-dd")"
                       @bind-Value="Auction.Ends" class="form-control" />
            <ValidationMessage For="@(() => Auction.Ends)" />
        </div>
    </div>
    <button type="submit" class="btn btn-success">
        @ButtonTextSubmit
    </button>
    <button type="button" class="btn btn-success" @onclick="NavigateToDashboard">
        @ButtonTextCancelar
    </button>
</EditForm>

@code {
    [Inject] private NavigationManager navigation { get; set; }
    [Inject] IManageAuctionService manageAuction { get; set; }
    public AuctionModel Auction { get; set; } = new AuctionModel();
    [Parameter] public string ButtonTextSubmit { get; set; } = "Salvar";
    [Parameter] public string ButtonTextCancelar { get; set; } = "Cancelar";
    public async Task CreateAuction()
    {
        await manageAuction.CreateNewAuction(Auction);
        await Task.CompletedTask;
        
        navigation.NavigateTo("/dashboard");
    }
    private void NavigateToDashboard() => navigation.NavigateTo("/dashboard");
}