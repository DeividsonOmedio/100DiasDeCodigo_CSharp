@using Entities.Enums
@inject IManageItemsService manageItems
@inject NavigationManager navigation
<h2>Editar Item</h2>

<EditForm Model="@Item" OnValidSubmit="EditItem" class="bg-opacity-50" style="font-size: 1rem;">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group row">
        <div class="col-sm-4">
            <label for="Item.Name">Nome</label>
            <InputText @bind-Value="Item.Name" class="form-control" />
            <ValidationMessage For="@(() => Item.Name)" />
        </div>
    </div>
    <div class="form-group row">
        <div class="col-sm-4">
            <label for="Item.Brand">Descrição</label>
            <InputTextArea @bind-Value="Item.Brand" class="form-control" />
            <ValidationMessage For="@(() => Item.Brand)" />
        </div>
    </div>
    <div class="form-group row">
        <div class="col-sm-4">
            <label for="Item.Condition">Fim</label>
            <InputSelect @bind-Value="Item.Condition" class="form-control">
                @foreach (var condition in Enum.GetValues(typeof(ConditionItemEnum)))
                {
                    <option value="@condition">@condition</option>
                }
            </InputSelect>
            <ValidationMessage For="@(() => Item.Condition)" />
        </div>
    </div>
    <div class="form-group row">
        <div class="col-sm-4">
            <label for="Item.BasePrice">Preço Base</label>
            <InputNumber @bind-Value="Item.BasePrice" class="form-control" />
            <ValidationMessage For="@(() => Item.BasePrice)" />
        </div>
    </div>

    <button type="submit" class="btn btn-success">
         Salvar
    </button>
    <button type="button" class="btn btn-success" @onclick="NavigateToDashboard">
        Cancelar
    </button>
</EditForm>
<Modal showModal="@showModal" titulo="@titulo" conteudo="@conteudo"></Modal>

@code {
    [Parameter] public ItemModel Item { get; set; }
    private bool showModal = false;
    private string titulo = string.Empty;
    private string conteudo = string.Empty;
    public async Task EditItem()
    {
        var result = await manageItems.ChangeItem(Item.Id, Item);
        if (result.GetType != null)
        {
            titulo = "Sucesso";
            conteudo = "Item Alterado com Sucesso";
        }
        else
        {
            titulo = "Falha";
            conteudo = "Falha ao Alterar Leilão";
        }
        ShowModal();
    }
    private void ShowModal() => showModal = true;
    private void NavigateToDashboard() => navigation.NavigateTo("/dashboard");
}